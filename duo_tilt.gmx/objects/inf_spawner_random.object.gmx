<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_blank</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>self.x = room_width / 2;
self.y = 100;
alarmspeed = 5;
alarmcount = 0;
alarm[0] = alarmspeed * room_speed;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarmcount++;
if alarmcount == 5 {alarmspeed = 4;}
else if alarmcount == 15 {alarmspeed = 3.5;}
else if alarmcount == 25 {alarmspeed = 2.5;}
alarm[0] = alarmspeed * room_speed;

singlecounter = 0;
doublecounter = 0;

if alarmcount &lt; 15{

for (i = 0; i &lt; 11; i++){
    myrand = round(random_range(0,200));
    if i == 6 {singlecounter = 0}
    if myrand &lt; 40{
        singlecounter++;
        doublecounter++;
    }
    if i != 6 and i != 0 and singlecounter &lt; 4 and doublecounter &lt; 5{
        if myrand &gt;= 0 and myrand &lt;= 1 {
            instance_create(room_width/12 + 160 * i ,self.y,obj_switch_fall_2);
        } else if myrand &gt;= 2 and myrand &lt;= 3 {
            instance_create(room_width/12 + 160 * i ,self.y,obj_on_fall_3);
        } else if myrand &gt;= 4 and myrand &lt;= 5 {
            instance_create(room_width/12 + 160 * i ,self.y,obj_off_fall_4);
        } else if myrand &gt;= 6 and myrand &lt;= 8 {
            instance_create(room_width/12 + 160 * i ,self.y,obj_M1_6);
        } else if myrand &gt;= 9 and myrand &lt;= 10 {
            instance_create(room_width/12 + 160 * i ,self.y,obj_health_9);
        } else if myrand &gt;= 11 and myrand &lt;= 12 {
            instance_create(room_width/12 + 160 * i ,self.y,obj_bomb_8);
        } else if myrand &gt;= 13 and myrand &lt;= 14 {
            instance_create(room_width/12 + 160 * i ,self.y,obj_time_slow_7);
        } else if myrand &gt;= 15 and myrand &lt;= 16 {
            instance_create(room_width/12 + 160 * i ,self.y,obj_invert_5);
        } else if myrand &gt;= 17 and myrand &lt;= 20 {
            //instance_create(room_width/12 + 160 * i ,self.y,obj_health_9);
        } else if myrand &gt;= 21 and myrand &lt;= 25 {
            instance_create(room_width/12 + 160 * i ,self.y,obj_box_inf);
        } else if myrand &gt;= 26 and myrand &lt;= 30 {
            instance_create(room_width/12 + 160 * i ,self.y,obj_slow_10);
        } else if myrand &gt;= 31 and myrand &lt;= 35 {
            instance_create(room_width/12 + 160 * i ,self.y,obj_color_dagger_14);
        } else if myrand &gt;= 36 and myrand &lt;= 40 {
            instance_create(room_width/12 + 160 * i ,self.y,obj_sine_dagger_11);
        } 
    }
}

} else{

for (i = 0; i &lt; 11; i++){
    myrand = round(random_range(0,200));
    if i == 6 {singlecounter = 0}
    if myrand &lt; 65{
        singlecounter++;
        doublecounter++;
    }
    
    
    if i != 6 and i != 0 and singlecounter &lt; 4 and doublecounter &lt; 6{
        if myrand &gt;= 0 and myrand &lt;= 1 {
            instance_create(room_width/12 + 160 * i ,self.y,obj_switch_fall_2);
        } else if myrand &gt;= 2 and myrand &lt;= 3 {
            instance_create(room_width/12 + 160 * i ,self.y,obj_on_fall_3);
        } else if myrand &gt;= 4 and myrand &lt;= 5 {
            instance_create(room_width/12 + 160 * i ,self.y,obj_off_fall_4);
        } else if myrand &gt;= 6 and myrand &lt;= 8 {
            instance_create(room_width/12 + 160 * i ,self.y,obj_M1_6);
        } else if myrand &gt;= 9 and myrand &lt;= 10 {
            instance_create(room_width/12 + 160 * i ,self.y,obj_health_9);
        } else if myrand &gt;= 11 and myrand &lt;= 12 {
            instance_create(room_width/12 + 160 * i ,self.y,obj_bomb_8);
        } else if myrand &gt;= 13 and myrand &lt;= 14 {
            instance_create(room_width/12 + 160 * i ,self.y,obj_time_slow_7);
        } else if myrand &gt;= 15 and myrand &lt;= 16 {
            instance_create(room_width/12 + 160 * i ,self.y,obj_invert_5);
        } else if myrand &gt;= 17 and myrand &lt;= 20 {
            instance_create(room_width/12 + 160 * i ,self.y,obj_health_9);
        } else if myrand &gt;= 21 and myrand &lt;= 25 {
            instance_create(room_width/12 + 160 * i ,self.y,obj_box_inf);
        } else if myrand &gt;= 26 and myrand &lt;= 30 {
            instance_create(room_width/12 + 160 * i ,self.y,obj_slow_10);
        } else if myrand &gt;= 31 and myrand &lt;= 35 {
            instance_create(room_width/12 + 160 * i ,self.y,obj_color_dagger_14);
        } else if myrand &gt;= 36 and myrand &lt;= 40 {
            instance_create(room_width/12 + 160 * i ,self.y,obj_sine_dagger_11);
        } else if myrand &gt;= 41 and myrand &lt;= 45 {
            instance_create(room_width/12 + 160 * i ,self.y,obj_homing_dagger_13);
        } else if myrand &gt;= 46 and myrand &lt;= 55 {
            instance_create(room_width/12 + 160 * i ,self.y,obj_ice_dagger_12);
        } else if myrand &gt;= 56 and myrand &lt;= 58 {
            instance_create(room_width/12 + 160 * i ,self.y,obj_health_9);
        }
    }
    
}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
