<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_blank</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_sprite_stretched_ext(sprite_index,image_index,0,200,room_width,room_height, c_white, 1);
self.x = room_width/2;
self.y = room_height/2+200;
image_xscale = 200;
image_yscale = 100;
//global.jumpright = false;
//global.jumpleft = false;
global.tapcount = 0;
global.tapsleft = 3;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.tapsleft++;
if global.tapsleft &lt; 3 {
    alarm[0] = 4 * room_speed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mouse_check_button_pressed(mb_left)){
    with (instance_position(mouse_x, mouse_y, self)){
        //global.jumpleft = true;
        //global.jumpright = true;
        
        
        //Change States
        if global.tapsleft &gt; 0 {
            global.tapcount += 1;
            global.tapsleft--;
            if !alarm[0] {
                alarm[0] = 7 * room_speed;
            }
           
            //This is for swapping states
            
            if global.lefton == true and global.righton == true {
                global.lefton = false;
                global.righton = false;
            } else if (global.lefton == true and global.righton == false) {
                global.lefton = false;
                global.righton = true;
            } else if (global.lefton == false and global.righton == true){
                global.lefton = true;
                global.righton = false;
            } else if (global.lefton == false and global.righton == false) {
                global.lefton = true;
                global.righton = true;
            }
        }
    }
}
/*
if (mouse_check_button_pressed(vk_space)){
        //Change States
        if global.tapsleft &gt; 0 {
            global.tapcount += 1;
            global.tapsleft--;
            if !alarm[0] {
                alarm[0] = 7 * room_speed;
            }
           
            //alarm[1] = room_speed;
            if global.lefton == true and global.righton == true {
                global.lefton = false;
                global.righton = false;
            } else if (global.lefton == true and global.righton == false) {
                global.lefton = false;
                global.righton = true;
            } else if (global.lefton == false and global.righton == true){
                global.lefton = true;
                global.righton = false;
            } else if (global.lefton == false and global.righton == false) {
                global.lefton = true;
                global.righton = true;
            }
        }
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_sprite_stretched_ext(sprite_index,image_index,0,200,room_width,room_height, c_white, 1);
//draw_self();
draw_text_transformed(room_width/2,room_height/2,string(global.tapcount),5,5,0);
draw_text_transformed(room_width/2,room_height/2-100,string(global.tapsleft),5,5,0);
draw_text_transformed(room_width/2- 100,room_height/2-200,string(alarm[0]/room_speed),5,5,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
