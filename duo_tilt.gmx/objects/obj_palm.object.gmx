<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Put at bottom
origx = self.x
origy = self.y

sincount = 0; //var
mult = 1.5; //var

depth = -990

show_debug_message("y at "+string(y))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sincount++;
if sincount &gt; 60 {sincount -= 60}
self.x = origx + 15*cos(2* 3.14 * (sincount/60));
self.y = origy + 15*sin(2* 3.14 * (sincount/60));
//x2 = origx + 10*cos(2* 3.14 * ((sincount-10)/60));
//y2 = origy + 10*sin(2* 3.14 * ((sincount-10)/60));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_stretched_ext(spr_wood,image_index,x,y-100,100*mult,300*mult,c_white,0.9);
draw_sprite_stretched_ext(spr_wood,image_index,x+25 * mult,y - 200 * mult,100*mult,300*mult,c_white,0.9);
draw_sprite_stretched_ext(spr_wood,image_index,x + 50 * mult,y - 500*mult,100*mult,400*mult,c_white,0.9);
//ends at y - 200*mult - 300 * mult - 400 * mult
starty = y - 600*mult;
draw_sprite_stretched_ext(spr_leaf3,image_index,x + 40,starty,110*mult,110*mult,c_white,0.8);
//draw_sprite_stretched_ext(spr_leaf2,image_index,x - 10 * mult,starty + 10 * mult,110*mult,110*mult,c_white,0.8);
//draw_sprite_stretched_ext(spr_leaf2,image_index,x + 8 * mult,starty + 10 * mult,110*mult,110*mult,c_white,0.8);
draw_sprite_stretched_ext(spr_leaf2,image_index,x -100,270,110*mult,110*mult,c_white,0.8);
draw_sprite_stretched_ext(spr_leaf1,image_index,x -300,270 + 150,110*mult,110*mult,c_white,0.6);

draw_sprite_stretched_ext(spr_leaf2,image_index,x -200,270 - 100,110*mult,110*mult,c_white,0.8);
draw_sprite_stretched_ext(spr_leaf1,image_index,x -400,270 - 200,110*mult,110*mult,c_white,0.6);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
