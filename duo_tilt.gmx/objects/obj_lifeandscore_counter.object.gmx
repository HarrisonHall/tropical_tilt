<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_blank</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_sprite_stretched_ext(sprite_index,image_index,0,200,room_width,room_height, c_white, 1);
self.x = room_width/2;
self.y = room_height/2+100;

if room == rm_climb {mult = 2}
else {mult = 1}
alarm[0] = room_speed * mult * 2;

alarm[1] = 1;

offset = 0;

depth = - 990;

clock = false;
global.timeleft = 1;
if room == rm_clock {
    clock = true;
    global.timeleft = 20;
    alarm[2] = 1 * room_speed;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.timeleft--;
alarm[2] = room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.life == 5 {offset = 50;}
else {offset = 0;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.gamescore++;
alarm[0] = room_speed * mult;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.timeleft &lt;= 0 {global.life = 0;}

if global.life &gt; 4 {sprite_index = spr_green}
else if global.life &lt;= 4 and global.life &gt;=2 {sprite_index = spr_orange}
else if global.life &lt; 2 and global.life &gt; 0{sprite_index = spr_red}
else if global.life &lt;= 0 {
    if room == rm_tutorial {room_goto(room)}
    if room == rm_lvl_green{room_goto(rm_greenplanetmap)}
    global.gameover = true;
    show_message("Score: "+string(global.gamescore));
    //show_debug_message("Life: "+string(global.life));
    if room == rm_inf_easy {
        ini_open("savedata.ini");
        highscore = ini_read_real(global.save,"easyhighscore",0);
        if global.gamescore &gt; highscore {ini_write_real(global.save,"easyhighscore",global.gamescore);}
        ini_close();
    } else if room == rm_inf_hard {
        ini_open("savedata.ini");
        highscore = ini_read_real(global.save,"hardhighscore",0);
        if global.gamescore &gt; highscore {ini_write_real(global.save,"hardhighscore",global.gamescore);}
        ini_close();
    } else if room == rm_climb {
        ini_open("savedata.ini");
        highscore = ini_read_real(global.save,"climbhighscore",0);
        if global.gamescore &gt; highscore {ini_write_real(global.save,"climbhighscore",global.gamescore);}
        ini_close();
    } else if room == rm_clock {
        ini_open("savedata.ini");
        highscore = ini_read_real(global.save,"clockhighscore",0);
        if global.gamescore &gt; highscore {ini_write_real(global.save,"clockhighscore",global.gamescore);}
        ini_close();
    }
    
    room_goto(global.backroom);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_text_transformed(x,y,string(global.life),5,5,0);
if global.showdebug == true {draw_text_transformed(room_width/2-50,room_height-100,string(global.gamescore),0.5,0.5,0)}
else {
    draw_sprite_stretched(spr_blank,image_index,0,room_height-60,room_width,60);
    if clock == false {
        draw_text_transformed(20,room_height-50,"SCORE: " + string(global.gamescore),0.4,0.4,0);
    } else {
        draw_text_transformed(20,room_height-50,"SCORE: " + string(global.gamescore) + " | TIME: " + string(global.timeleft),0.4,0.4,0);
    }
}

startposx = 50;
startposy = room_height / 2;
offset = global.life * 50 / 2;
for (i = 0; i &lt; global.life; i++){
    draw_sprite_stretched(sprite_index, image_index, startposx, startposy - 50 * i + offset, 50, 50);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
