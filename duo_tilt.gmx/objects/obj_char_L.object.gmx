<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_char_L</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>self.x = room_width / 4;
self.y = room_height - 200;
iamon = true;
//xtilt
neutraltilt = 0.25;
stoptilt = 0.15
//ytilt
neutraltiltup = 0.9;
neutraltiltdown = 0.5;
stoptiltup = 0.85
stoptiltdown = 0.6
verticaloffset = 100;
modi = 0;

if room == rm_debug_v3{
    alarm[0] = 5 * room_speed;
}

global.lefton = true;
global.jumpcounter = 0;
global.jumpleft = false;
global.fall = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Randomly activate or deactivate side
myrand = round(random_range(0,1));
if myrand == 0 {
    global.lefton = true;
    sprite_index = spr_char_L;
}
if myrand == 1 {
    global.lefton = false;
}

alarm[0] = 5* room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Object on
iamon = global.lefton;

//edit y value
//Check tilt modifier

if global.lefton == true{
/*
    if global.tilth &lt; 0.65 {modi = 100;}
    if global.tilth &gt; 0.9 and global.tilth &lt; 1.5{modi = -100;}
    if global.tilth &gt; 0.65 and global.tilth &lt; 0.9 {modi = 0;}
*/
    //modi = modi * 500;
    self.y = round(-(1/2000) * power(self.x - 480,2) + 1000); //+modi
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//State check
if global.lefton == true {
    sprite_index = spr_char_L;
}
if global.lefton == false {
    hspeed = 0;
    sprite_index = spr_char_off;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Check positioning
if (self.x &gt; room_width/2 or self.x &lt; 2 ){
    hspeed = 0;
}



if global.lefton == true{
    if global.jumpleft == true{
        global.jumpleft = false;
        //Do the jump
        //motion_set(random(360), 1 + random(3));
    }
    //Tilt x
    if (global.tilt &gt; neutraltilt and self.x &lt; room_width/2 + 2){
        //Move right
        hspeed = global.movespeed;
    }
    if (global.tilt &lt; -neutraltilt and self.x &gt; -2){
        //Move left
        hspeed = -global.movespeed;
    }
    if (global.tilt &lt; stoptilt and global.tilt &gt; -stoptilt){
        //Move left
        hspeed = 0;
    }
    //Tilt y
    
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
