<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_char_M</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = 18;
image_yscale = 18;

//self.y = room_height - 200;
iamon = true;
neutraltilt = 0.15;
stoptilt = .15;

instance_create(0,0,purp_entrance);

//alarm[0] = 5*room_speed;

global.jumpcounter = 0;
global.jumpright = false;
global.fall = false;

//skins
if global.skins == "debug" {
    myskins[1] = spr_char_M;
    myskins[2] = spr_char_M;
    myskins[3] = spr_char_M;
    myskins[4] = spr_char_off;
    image_xscale = 18;
    image_yscale = 18;
} else if global.skins == "minimal" {
    myskins[1] = purp_l;
    myskins[2] = purp_m;
    myskins[3] = purp_r;
    myskins[4] = min_off;
    image_xscale = 18/3;
    image_yscale = 18/3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (i = 0; i &lt; 15; i++){instance_create(x+random_range(-20,20),y-(sprite_height/2),obj_pain);}
global.sides = "normal";
global.controls = "normal";
L_inf.x = 480;
R_inf.x = 1440;
global.lefton = false;
global.righton = false;
L_inf.alarm[1] = 1.5*room_speed;
R_inf.alarm[1] = 1.5*room_speed;
instance_create(0,0,purp_destroyance);
audio_play_sound(snd_hurt,10,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.middleon = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Randomly activate or deactivate side
myrand = round(random_range(0,1));
if myrand == 0 {
    global.middleon = true;
    sprite_index = spr_char_R;
}
if myrand == 1 {
    global.middleon = false;
}

alarm[0] = 5* room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Object on
iamon = global.middleon;
if global.middleon == true{
   self.y = round(-(1/8000) * power(self.x - 960,2) + 920);
} else {
    //sprite_index = myskins[4];
    self.y = round(-(1/8000) * power(self.x - 960,2) + 920);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//State check
if global.middleon == true {
    //sprite_index = spr_char_M;
}
if global.middleon == false {
    hspeed = 0;
    sprite_index = myskins[2];
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Check positioning
if (self.x &lt; 2 or self.x &gt; room_width - 2 ){
    hspeed = 0;
}

if global.middleon == false and !alarm[1]{alarm[1] = 2 * room_speed;}

if true{
    //Tilt
    if global.sides == "normal" or global.sides == "swapped"{
        if (global.tilt &gt; neutraltilt and self.x &lt; room_width - 2){
            //Move right
            hspeed = global.movespeed;
            sprite_index = myskins[3];
        }
        if (global.tilt &lt; -neutraltilt and self.x &gt; 2){
            //Move left
            hspeed = -global.movespeed;
            sprite_index = myskins[1];
        }
        if (global.tilt &lt; stoptilt and global.tilt &gt; -stoptilt){
            //Move none
            hspeed = 0;
            sprite_index = myskins[2];
        }
    }
}

if global.middleon == false {sprite_index = myskins[4];}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
